package org.mql.spring.business;

import java.util.List;

import org.mql.spring.dao.FormateurDao;
import org.mql.spring.dao.FormationDao;
import org.mql.spring.dao.ModuleDao;
import org.mql.spring.models.Formateur;
import org.mql.spring.models.Formation;
import org.mql.spring.models.Module;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class FormationServicesDefault implements FormationServices{
	
	@Autowired
	private ModuleDao moduleDaoJdbc;
	@Autowired
	private FormationDao formationDaoJdbc;
	@Autowired
	private FormateurDao formateurDaoJdbc;
	
	@Autowired
	private ModuleDao moduleDaoImpl;
	@Autowired
	private FormationDao formationDaoImpl;
	@Autowired
	private FormateurDao formateurDaoImpl;

	@Override
	public List<Module> getAllModules() {
		return moduleDaoJdbc.selectAll();
	}

	@Override
	public List<Formateur> getAllFormateurs() {
		return formateurDaoJdbc.selectAll();
;
	}

	@Override
	public List<Formation> getAllFormations() {
		return formationDaoJdbc.selectAll();
	}

	@Override
	public Boolean saveAllModules() {
		List<Module> modules = moduleDaoImpl.selectAll();
		for (Module module : modules) {
			moduleDaoJdbc.insert(module);
		}
		return true;
	}

	@Override
	public Boolean saveAllFormations() {
		List<Formation> formations = formationDaoImpl.selectAll();
		for (Formation formation : formations) {
			formationDaoJdbc.insert(formation);
		}
		return true;
	}

	@Override
	public Boolean saveAllFormateurs() {
		List<Formateur> formateurs = formateurDaoImpl.selectAll();
		for (Formateur formateur : formateurs) {
			formateurDaoJdbc.insert(formateur);
		}
		return true;
	}

	
	
}


